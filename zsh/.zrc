#!/usr/bin/zsh
# Base
setopt histignorealldups sharehistory
setopt +o nomatch
stty -ixon
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

PROMPT=$'\n%B%K{black}%F{cyan}%S%T%s%f%k%b %B%F{blue}%3~%f%b %# '
export LANG=en_US.UTF-8
export SHELL='/usr/bin/zsh'
export EDITOR='/usr/bin/nvim'
export LESS='-irFRX'
source ~/.aliases

is_wsl(){
    if grep -q Microsoft /proc/version; then
        return true
    else
        return false
    fi
}

# ZSH plugins
load_zsh_plugins(){
    # Zsh autosuggestions
    source ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=magenta'
    ZSH_AUTOSUGGEST_CLEAR_WIDGETS=(vi-cmd-mode)
    ZSH_AUTOSUGGEST_HISTORY_IGNORE="cd *"

    # Zsh highlighting
    source ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

    # Zsh vim mode
    MODE_INDICATOR=""
    KEYTIMEOUT=1
    source ~/.zsh/plugins/zsh-vim-mode/zsh-vim-mode.plugin.zsh
    setopt NO_prompt_subst
    VIM_MODE_TRACK_KEYMAP=no
    MODE_CURSOR_VIINS='green blinking bar'
    MODE_CURSOR_VICMD='green block'
    # Should be placed after
    bindkey '^[[Z' autosuggest-accept

    # Zsh system clipboard
    source ~/.zsh/plugins/zsh-system-clipboard/zsh-system-clipboard.zsh
    typeset -g ZSH_SYSTEM_CLIPBOARD_TMUX_SUPPORT='true'

    # Zsh fzf completion
    source ~/.zsh/plugins/fzf-tab-completion/zsh/fzf-zsh-completion.sh
    bindkey '^I' fzf_completion
}
load_zsh_plugins

# Run all program files
run(){
    ext=$1:t:e
    case "$ext" in
        py) python3 $@;;
        js) node $@;;
        cc|cpp) g++ $@ && ./a.out;;
        c) gcc $@ && ./a.out;;
        rs) rustc $@ -o a.out && ./a.out;;
        kt) kotlinc $@ -include-runtime -d a.jar && java -jar a.jar;;
        java) javac $@ && java -cp . $(echo "$@" | cut -f 1 -d '.');;
        go) go run $@;;
        sh|bash|zsh) zsh $@;;
        bat|cmd) cd `dirname "$@"` && cmd.exe /C `basename "$@"`;;
        *) echo 'Nothing to do';;
    esac
}

# Unzip universal command
unzip() {
    ext=$1:t:e
    case "$ext" in
        zip) /usr/bin/unzip $@;;
        gzip) gunzip $@;;
        gz) tar -xvf $@;;
        7z) 7z x $@;;
        *) echo 'Nothing to do';;
    esac
}

# Open function
if is_wsl; then
    open(){
        if [[ -n "$@" ]] then
            /mnt/c/Windows/System32/cmd.exe /C start "" "$@"
        fi
    }
else
    open(){
        xdg-open $1 1>/dev/null 2>/dev/null &
    }
fi

# Pyqo
export PYQO_F_TARGET='cat ~/.config/pyqo/f.json | jq ".$1" | sed "s/\"//g"'
export PYQO_D_TARGET='cat ~/.config/pyqo/d.json | jq ".$1" | sed "s/\"//g"'
if is_wsl; then
    export PYQO_F_TARGET="wslpath \$($PYQO_F_TARGET)"
    export PYQO_D_TARGET="wslpath \$($PYQO_D_TARGET)"
fi
ef(){
    $EDITOR "$(eval $PYQO_F_TARGET)"
}
c(){
    cd "$(eval $PYQO_D_TARGET)"
}

# Theme
theme(){
    sed -i "\$s/.*/colors: \\*$1/" ~/.config/alacritty/alacritty.yml
    sed -i "1s/.*/set bg=$1/" ~/.vim/style.vim
}

# Vifm
vifm-only-choose-dir()
{
    local dst=$(vifm -c :only --choose-dir - . < /dev/tty)
    if [ -z "$dst" ]; then
        echo 'Directory picking cancelled/failed'
        return 1
    fi
    cd "$dst"
    zle reset-prompt
    vim-mode-set-cursor-style viins
    return 0
}
zle -N wvf vifm-only-choose-dir
bindkey '^f' wvf

# FZF
export FZF_DEFAULT_COMMAND='fdfind'
export FZF_CTRL_T_COMMAND='fdfind'
export FZF_ALT_C_COMMAND='fdfind --type d'
export FZF_DEFAULT_OPTS='--ansi --height 40% --border'
[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ] && source /usr/share/doc/fzf/examples/key-bindings.zsh

# Recent directories
export PREV_PWD="$PWD"
export DIR_HIST=~/.dirhist
precmd() {
    if [ "$PWD" != "$PREV_PWD" ]; then
        PREV_PWD="$PWD"
        touch $DIR_HIST
        sed -i "\#^$PWD\$#d" $DIR_HIST
        echo "$(cat $DIR_HIST | tail -49)\n$PWD" > $DIR_HIST
    fi
}
export FZF_ALT_P_COMMAND='eval "tac ~/.dirhist | grep -v \"^$PWD\$\""'
go_to_recent_directory() {
    cd "`eval $FZF_ALT_P_COMMAND | fzf --no-sort`"
    zle reset-prompt
}
zle -N gtrd go_to_recent_directory
bindkey '^[p' gtrd

# Cheat
cheat() {
    language=$1
    shift
    curl cheat.sh/$language/${(j:+:)@}
}

# Exit
exit_zsh() { exit }
zle -N exit_zsh
bindkey '^Q' exit_zsh
bindkey -M vicmd '^Q' exit_zsh

# Windows
if is_wsl; then
    export DISPLAY=:0.0
    cmd(){
        cmd.exe /C $@
    }
    for filename in ~/bin/*.bat; do
        alias "${filename:t:r}=cmd.exe /C %USERPROFILE%/bin/${filename:t:r}.bat"
    done
fi
