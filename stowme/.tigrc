# vim: set ft=bash:
color search-result default blue
color cursor default black
color title-focus default black
color title-blur default black
set blame-view = author:abbreviated date:custom,format=%d/%m/%Y line-number:interval=1 text
set main-view = date:custom,format=%d/%m/%Y author:abbreviated commit-title:refs=true
set ignore-case = smart-case
set show-changes = no

set diff-options = --pretty=medium

bind generic g none
bind generic gg :0
bind generic G move-last-line
bind generic y none
bind generic yc !@>zsh -fc "echo -n %(commit) | c"
bind generic yf !@>zsh -fc "echo -n %(file) | c"
bind generic yy !@>zsh -fc "echo -n %(text) | c"
bind generic ; back
bind generic <C-q> :q
bind diff j :/\|\s+(0|[0-9]+\s[\+-]+)$
bind diff k :?\|\s+(0|[0-9]+\s[\+-]+)$
bind status j :/^\S+
bind status k :?^\S+

bind generic l :d

bind log l !@>new -c "tig show '%(commit)'"
bind diff l !+>new -c "\
  [[ -n '%(stash)' ]] && P='%(stash)^ %(stash)' || P='%(commit)^!';\
  FILE="${PWD}/%(file)" git difftool "${=P}" -- '%(file)';\
"
bind stage l !+>new "\
  [[ '%(status)' =~ 'Staged changes' ]] && P='--staged' || P='';\
  FILE="${PWD}/%(file)" git difftool "${=P}" -- '%(file)';\
"
bind status l !+>new "\
  [[ $(git ls-files --unmerged '%(file)') ]] && git mergetool -- '%(file)' && exit 0;\
  [[ '%(status)' =~ 'Untracked file' ]] && nvim '%(file)' && exit 0;\
  [[ '%(status)' =~ 'Staged changes' ]] && P='--staged' || P='';\
  FILE="${PWD}/%(file)" git difftool "${=P}" -- '%(file)';\
"
bind status p !+>new "FILE="${PWD}/%(file)" git pick '%(file)'"
