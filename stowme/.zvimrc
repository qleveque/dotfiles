#!/bin/zsh
set-cursor() { zvs-zle-keymap-select;local c=2;[[ ${KEYMAP} == main ]]&&c=6;printf $'\e[%d q' $c }
goto-recent-dir() { cd "$(eval ${FZF_P_COMMAND} | fzf --exact)";zle reset-prompt;zle zle-line-init }
open-fm() { cd "$(vifm -c :only --choose-dir - . < /dev/tty)";zle reset-prompt;zle zle-line-init }
quit() { exit }
vi-cut() { zle .vi-delete; printf '%s' "${CUTBUFFER}" | c }
vi-yank() { zle .vi-yank; zle set-mark-command -n -1; printf '%s' "${CUTBUFFER}" | c }
vi-put-before() { CUTBUFFER="$(p 2>/dev/null || echo ${CUTBUFFER})"; zle .vi-put-before }
vi-put-after() { CUTBUFFER="$(p 2>/dev/null || echo ${CUTBUFFER})"; zle .vi-put-after }
opp-wrap() { read -k1 k;case $k in s)zle add-surround;;*)zle -U $k&&zle .vi-${WIDGET%-wrap};;esac }
nohl() { region_highlight=(); _zsh_highlight}
visual-swap() { zle vi-delete;local b="${CUTBUFFER}";zle vi-put-before;printf '%s' "${b}"|c}
visual-put() { zle vi-delete; zle vi-put-before }

# Instantiating zle widgets
autoload -U select-{bracketed,quoted} surround edit-command-line
zle -N add-surround surround
for w in zle-{keymap-select,line-{init,finish}}; do zle -N $w set-cursor; done
for w in {change,delete}-wrap; do zle -N $w opp-wrap; done
for w in goto-recent-dir open-fm quit select-{bracketed,quoted} edit-command-line\
  vi-{cut,yank,put-{before,after}} nohl visual-{put,swap}; do zle -N $w; done

# Remapping
bindkey -v
bindkey -M vicmd -r :
bindkey -M vicmd s add-surround c change-wrap d delete-wrap x vi-cut U redo \
  '^V' edit-command-line '\e' nohl
bindkey -M visual s add-surround c vi-change d vi-delete x vi-cut v visual-line-mode \
  P visual-swap p visual-put
bindkey -M viins '^[[Z' forward-word '^V' vi-put-before '^I' fzf_completion \
  '^?' backward-delete-char '^G' _mark_expansion
for m in visual vicmd viins
  do bindkey -M $m '^P' goto-recent-dir '^F' open-fm '^Q' quit;
done
for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $m $c select-bracketed
  done
  for c in {a,i}{\',\",\`,_,-,\\,/,\,,.,\;,:,\|,\&}; do
    bindkey -M $m $c select-quoted
  done
done
