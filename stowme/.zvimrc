#!/usr/bin/zsh
# vim: set ft=zsh:

VI_MODE_CURSOR_VISUAL=2
VI_MODE_SET_CURSOR=true
MODE_INDICATOR=""

local reset-prompt(){
  zle reset-prompt
  zle autosuggest-clear
  zle zle-line-init
}

zvim-put(){
  local CLIPBOARD=${"$(p; printf '%s' x)"%x} D1=$1 D2=$2
  BUFFER="${BUFFER:0:$(( ${CURSOR} + ${D1} ))}${CLIPBOARD}${BUFFER:$(( ${CURSOR} + ${D1} ))}"
  CURSOR=$(( $#LBUFFER + $#CLIPBOARD + ${D2} ))
}
zvim-put-after(){zvim-put 1 0}
zvim-put-before(){zvim-put 0 -1}
zvim-put-ins(){zvim-put 0 0}
zle -N zvim-put-after
zle -N zvim-put-before
zle -N zvim-put-ins

zvim-replace(){
  local PUT=${"$(p; printf '%s' x)"%x}
  zvim-cut
  local REPLACED=${"$(p; printf '%s' x)"%x}
  printf '%s' "$PUT" | c
  zvim-put 0
  printf '%s' "$REPLACED" | c
}
zle -N zvim-replace

zvim-cut(){
  zle vi-delete
  printf '%s' "$CUTBUFFER" | c
}
zle -N zvim-cut

zvim-yank(){
  zle vi-yank
  printf '%s' "$CUTBUFFER" | c
}
zle -N zvim-yank

zvim-recent-dir(){
  LBUFFER+="`eval $FZF_P_COMMAND | fzf --exact`"
  reset-prompt
}
zle -N zvim-recent-dir

zvim-goto-recent-dir(){
  cd "$(eval $FZF_P_COMMAND | fzf --exact)"
  reset-prompt
}
zle -N zvim-goto-recent-dir

zvim-fm(){
  cd "$(vifm -c :only --choose-dir - . < /dev/tty)"
  reset-prompt
}
zle -N zvim-fm

zvim-exit(){
  exit
}
zle -N zvim-exit

autoload -U select-bracketed
zle -N select-bracketed

autoload -U select-quoted
zle -N select-quoted

autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround

bindkey -M vicmd y zvim-yank
bindkey -M vicmd p zvim-put-after
bindkey -M vicmd P zvim-put-before
bindkey -M vicmd x zvim-cut
bindkey -M visual x zvim-cut
bindkey -M visual p zvim-replace

bindkey -M vicmd vv visual-line-mode
bindkey -M vicmd U redo
bindkey -M vicmd -r :
bindkey -M viins '^V' zvim-put-ins
bindkey -M viins '^P' zvim-recent-dir

bindkey -M vicmd cs change-surround
bindkey -M vicmd ds delete-surround
bindkey -M vicmd s add-surround
bindkey -M visual s add-surround

for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $m $c select-bracketed
  done
done

for m in visual viopp; do
  for c in {a,i}{\',\",\`}; do
    bindkey -M $m $c select-quoted
  done
done

for m in visual vicmd viins; do
  bindkey -M $m '\ep' zvim-goto-recent-dir
  bindkey -M $m '^F' zvim-fm
  bindkey -M $m '^Q' zvim-exit
done
